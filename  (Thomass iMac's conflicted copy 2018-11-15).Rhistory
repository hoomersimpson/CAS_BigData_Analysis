qplot(Alter, Lohn, data=d, shape=Geschl, color=Geschl,
facets=Land~Branche, size=I(3),
xlab="Alter", ylab="Lohn")
# Kernel density plots für Lohn, gruppiert nach Land
qplot(Lohn, data=d, geom="density", fill=Land, alpha=I(.5),
main="Verteilung des Lohns", xlab="Lohn in CHF",
ylab="Dichte")
# Kernel density plots für Lohn, gruppiert nach Land
qplot(Lohn, data=d, geom="density", fill=Land, alpha=I(.2),
main="Verteilung des Lohns", xlab="Lohn in CHF",
ylab="Dichte")
############
# Folie 11
############
# Boxplots von Lohn pro Land
# observations (points) are overlayed and jittered
qplot(Land, Lohn, data=d, geom=c("boxplot", "jitter"),
fill=Land, main="Lohn nach Land",
xlab="", ylab="Lohn")
# Separate Regression für Lohn und Alter pro Branche
qplot(Alter, Lohn, data=d, log="xy", color=Branche,
geom=c('point')) + geom_smooth(method="lm")
install.packages("reshape2")
install.packages("plyr")
install.packages("ggplot2")
install.packages("MASS")
install.packages("reshape2")
library(reshape2); library(plyr); library(ggplot2); library(MASS)
set.seed(1)
Alter <- rnorm(1000,30,8) # generiere 1000 normal-verteilte Werte
hist(Alter,breaks=100) # erstelle das Histogramm
hist(Alter,breaks=10) # erstelle das Histogramm
hist(Alter,breaks=1000) # erstelle das Histogramm
hist(Alter,breaks=100) # erstelle das Histogramm
fit <- fitdistr(Alter, "normal")  # fit dat to a Normal distribution
fit$estimate # das sind Mittelwert und Standardabweichung
me <- fit$estimate[[1]] # Mittelwert (Durchschnitt)
sd <- fit$estimate[[2]] # Standardabweichung
hx <- hist(Alter, breaks=100, plot=FALSE) # generiere Histogramm
grenzwert <- qnorm(0.95,me,sd) # Quantil für Fläche = 95%; hier 43.52
plot(hx, col=ifelse(abs(hx$breaks) < grenzwert, 4, 2))
me
sd
grenzwert
plot(hx, col=ifelse(abs(hx$breaks) < grenzwert, 4, 2))
# Entscheid:
ifelse(45 <= grenzwert,"Die Person gehört dazu","Die Person gehört nichtdazu")
1-pnorm(45,me,sd)
grenzwert # 3.4% sind älter als 43.5 Jahre
help(prop.test)
chisq.test(x=c(45,40,65),p=c(1/3,1/3,1/3))
prob.test(98,150)
prop.test(98,150)
prop.test(98,150,p=0.5,alt="greater")
prop.test(98,150,p=0.05,alt="greater")
prop.test(98,150,p=0.5,alt="greater")
prop.test(98,150,p=0.1,alt="greater")
prop.test(98,150,p=1,alt="greater")
prop.test(98,150,p=0.9,alt="greater")
prop.test(98,150,p=0.5,alt="greater")
prop.test(x=c(35,30),n=(c(63,46)),alt="greater")
chisq.test(x(c(80,99,78,89,82,79,53)),p=c(1/7,1/7,1/7,1/7,1/7,1/7,1/7))
chisq.test(x=(c(80,99,78,89,82,79,53)),p=c(1/7,1/7,1/7,1/7,1/7,1/7,1/7))
prop.test(98,150,p=0.5,alt="greater")
prop.test(10,150,p=0.5,alt="greater")
prop.test(100,150,p=0.5,alt="greater")
prop.test(75,150,p=0.5,alt="greater")
x<-c(7,8,6,10,9)
t.test(x,mu=10,alt="two.sided")
a<-c(10.77,9.89,9.92,10.66,10.30,10.36,10.44,10.31,9.91)
a
t.test(a,at="two.sided")
t.test(a,alt="two.sided")
t.test(a,mu=10,alt="two.sided")
a
t.test(a,mu=10,alt="two.sided")
help(prop.test)
prop.test(50,100)
prop.test(40,100)
prop.test(30,100)
prop.test(30,100,0.5)
prop.test(40,100,0.5)
prop.test(39,100,0.5)
prop.test(40,100,0.5)
prop.test(40,100,0.5,alt=g)
prop.test(40,100,0.5,alt="g")
prop.test(30,100,0.5,alt="g")
prop.test(30,100,0.5,alt="l")
prop.test(30,100,0.5,alt="g")
prop.test(24,40,0.5,alt="g")
prop.test(10,40,0.5,alt="g")
prop.test(5,40,0.5,alt="g")
prop.test(40,40,0.5,alt="g")
prop.test(20,40,0.5,alt="g")
prop.test(10,40,0.5,alt="g")
prop.test(24,40,0.5,alt="g")
prop.test(25,40,0.5,alt="g")
prop.test(26,40,0.5,alt="g")
prop.test(26,40,0.5)
prop.test(20,40,0.5)
prop.test(10,40,0.5)
prop.test(24,40,0.5,alt="g")
summary(c(2,3,2,4,2))
hist(c(2,3,2,4,2))
a<-(c(2,3,2,4,2))
hist(a)
plot(a)
plot(a)
hist(a)
boxplot(a)
Anzahl_Beobachtungen <- 150
prop.test(x=Anzahl_Erkannt, n=Anzahl_Beobachtungen,p=0.5)
Anzahl_Beobachtungen <- 150
Anzahl_Erkannt <- 98
prop.test(x=Anzahl_Erkannt, n=Anzahl_Beobachtungen,p=0.5)
prop.test(x=Anzahl_Erkannt, n=Anzahl_Beobachtungen,p=0.5, alt=greater)
prop.test(x=Anzahl_Erkannt, n=Anzahl_Beobachtungen,p=0.5, alt="greater")
prop.test(x=Anzahl_Erkannt, n=Anzahl_Beobachtungen,p=0.5, alt="greater")
prop.test(x=Anzahl_Erkannt, n=Anzahl_Beobachtungen,p=0.5)
prop.test(c(490,400),c(500,500))
prop.test(c(400,400),c(500,500))
prop.test(c(400,400),c(1000,500))
prop.test(c(400,400),c(1000,1000))
prop.test(c(200,400),c(5000,1000))
prop.test(c(200,400),c(500,1000))
prop.test(c(490,400),c(500,500))
prop.test(c(450,400),c(500,500))
prop.test(c(452,400),c(500,500))
prop.test(c(420,400),c(500,500))
prop.test(c(430,400),c(500,500))
prop.test(c(435,400),c(500,500))
prop.test(c(425,400),c(500,500))
prop.test(c(424,400),c(500,500))
prop.test(c(425,400),c(500,500))
prop.test(c(490,400),c(500,500),alt="less")
prop.test(c(390,400),c(500,500),alt="less")
prop.test(c(490,400),c(500,500),alt="less")
prop.test(c(290,400),c(500,500),alt="less")
prop.test(c(490,400),c(500,500),alt="less")
prop.test(c(490,400),c(500,500),alt="greater")
prop.test(c(490,400),c(500,500))
x <- c(2.2,2,2.2.4,4,3.5,2.7,3.1)
x <- c(2.2,2,2.2.4,4,3.5,2.7,3.1)
x <- c(2.2,2,2.2,4,4,3.5,2.7,3.1)
x
y<-c(400,440,400,250,320,350,330)
a<-data.frame(x,y)
help("data.frame")
a<-data.frame(x,y)
x
y
x
x
y
x <- c(2.2,2,2.4,4,3.5,2.7,3.1)
a<-data.frame(x,y)
a
plot(x,y)
cor(x,y)
lm(x,y)
cor.test(x,y)
lm(y ~ x)
reg<-lm(y ~ x)
reg
reg
plot(reg)
reg
plot(x,y)
abline(reg, col="red")
help(abline)
summary(reg)
library("rgl")
install.packages("rgl")
library("rgl")
library("car")
attach(mtcars)
scatter3d(x = wt, y = disp,
z = mpg)
detach(mtcars)
fit <- lm(mpg ~ wt + disp,data=mtcars)
n <- 10
Alter <- round(20+30*runif(n),1)
Verh <- round(Alter/10+4*runif(n),1)
Kinder <- round(Verh/(1+2*runif(n)),0)
Lohn <- round((2+runif(n))*Alter + (5*runif(n))*Verh
+ (10+5*runif(n))*Kinder + 10+20*runif(n),2)
dat <- data.frame(Lohn,Alter,Verh,Kinder)
Dat
set.seed(999)
n <- 10
Alter <- round(20+30*runif(n),1)
Verh <- round(Alter/10+4*runif(n),1)
Kinder <- round(Verh/(1+2*runif(n)),0)
Lohn <- round((2+runif(n))*Alter + (5*runif(n))*Verh
+ (10+5*runif(n))*Kinder + 10+20*runif(n),2)
dat <- data.frame(Lohn,Alter,Verh,Kinder)
Dat
n <- 10
Alter <- round(20+30*runif(n),1)
Verh <- round(Alter/10+4*runif(n),1)
Kinder <- round(Verh/(1+2*runif(n)),0)
Lohn <- round((2+runif(n))*Alter + (5*runif(n))*Verh
+ (10+5*runif(n))*Kinder + 10+20*runif(n),2)
dat <- data.frame(Lohn,Alter,Verh,Kinder)
dat
cor(dat)
mod <- lm(Lohn ~ Alter + Verh + Kinder, data=dat)
mod
summary(mod)
mod
pers <- data.frame(Alter=c(20,25,30,40),Verh=c(0,3,4,1),Kinder=c(2,5,1,9))
pers
predict(mod.pers)
predict(mod,pers)
predict(mod,pers,interval="prediction",level=0.95)
data(swiss)
str(swiss)
summary(swiss)
swiss
pairs(swiss)
cor(swiss)
str(swiss)
swiss
x <- data.frame(swiss)
x
str(x)
str(swiss)
y<-data.matrix(swiss)
y
str(y)
install.packages("Hmisc")
install.packages("stringi")
libarary(Hmisc)
library(Hmisc)
libarary(stringi)
library(stringi)
install.packages("PerformanceAnalytics")
library("PerformanceAnalytics")
chart.Correlation(swiss, histogram = TRUE, pch=19)
swiss
library(psych)
install.packages("psych")
library(psych)
windows
windows()
pairs.panel(swiss)
pairs.panel(swiss,main="..")
pairs.panels(swiss)
help(swiss)
Regression.swiss<-lm(Fertility ~ Agriculture + Examination + Education + Catholic + Infant.Morgality, data=swiss)
Regression.swiss<-lm(Fertility ~ Agriculture + Examination + Education + Catholic + Infant.Mortality, data=swiss)
Regression.swiss2 <- lm(Fertility ~ ., data=swiss)
Swiss.step.FW <- step(Regression.swiss, direction="forward")
Swiss.step.BW <- step(Regression.swiss, direction="backward")
Swiss.step.BW
Swiss.step.FW
Swiss.step.FW <- step(Regression.swiss, direction="forward")
Swiss.step.FW
Swiss.step.BW
Swiss.step.FW <- step(Regression.swiss, direction="forward")
Swiss.step.BW <- step(Regression.swiss, direction="backward")
Swiss.step.FW <- step(Regression.swiss, direction="forward")
Swiss.step.FW <- step(Regression.swiss, direction="forward",trace=10)
Swiss.step.FW <- step(Regression.swiss, direction="forward",trace=3)
install.packages("leaps")
library("leaps")
swiss.subsets<- regsubsets(Fertility ~ .,nbest=10, data=swiss.subsets)
swiss.subsets<- regsubsets(Fertility ~ .,nbest=10, data=swiss)
swiss.subsets
subset(swiss.subsets, min.size=2, max.size=5, legend=F, statistic=c("adjr2"))
subsets(swiss.subsets, min.size=2, max.size=5, legend=F, statistic=c("adjr2"))
subsets(swiss.subsets, min.size=2, max.size=5, legend=F, statistic=c("adjr2"))
subsets(swiss.subsets, min.size=2, max.size=3, legend=F, statistic=c("adjr2"))
subsets(swiss.subsets, min.size=1, max.size=3, legend=F, statistic=c("adjr2"))
subsets(swiss.subsets, min.size=3, max.size=4, legend=F, statistic=c("adjr2"))
swiss.subsets
subsets(swiss.subsets, min.size=3, max.size=4, legend=F, statistic=c("adjr2"))
library(MASS)
Reg <- lm(Fertility~., data=swiss)
Reg
summary(Reg)
Schrittweise <- stepAIC(fit, direction="both", k=2)
summary(schrittweise)
summary(Schrittweise)
predict$
asdffa
list()
rm <- list()
rm(list())
rm
help(rm)
list()
ls()
rm(ls())
ls()
rm(ls())
ls()
a <- ls()
rm(a)
ls()
rm(list=ls())
Bauvolumen <- read.csv("~/Dropbox/CAS/Kursmaterial/Tag_5/Bauvolumen.dat", sep="")
View(Bauvolumen)
str(Bauvolumen)
summary(Bauvolumen)
Bauvolumen
boxplot(Bauvolumen$Bau)
hist(Bauvolumen$Bau)
str(Bauvolumen)
hist(Bauvolumen$Bev)
hist(Bauvolumen$Nr)
Bauvolumen
attach(mtcars)
str(Bauvolumenb)
str(Bauvolumen)
plot(Bauvolumen$Bev,Bauvolumen$Bau)
plot(Bauvolumen$Bev,Bauvolumen$Bau)
a - lm(Bauvolumen$Bau ~ Bauvolumen$Bev, Bauvolumen)
baulm <- lm(Bauvolumen$Bau ~ Bauvolumen$Bev, Bauvolumen)
str(baulm)
summmary(Bauvolumen)
s
baulm <- lm(Bauvolumen$Bau ~ Bauvolumen$Bev, Bauvolumen)
summary(baulm)
# Bau = -0.06 * 0.071 x Bev
# Adj - R-squared = 0.922
car.test(baulm)
# Bau = -0.06 * 0.071 x Bev
# Adj - R-squared = 0.922
baulm <- car.test(Bauvolumen$Bau,Bauvolumen$Bev)
help(car.test)
# Bau = -0.06 * 0.071 x Bev
# Adj - R-squared = 0.922
baulm <- cor.test(Bauvolumen$Bau,Bauvolumen$Bev)
baulm <- lm(Bauvolumen$Bau ~ Bauvolumen$Bev, Bauvolumen)
# Bau = -0.06 * 0.071 x Bev
# Adj - R-squared = 0.922
baulm_cor_test <- cor.test(Bauvolumen$Bau,Bauvolumen$Bev)
baulm_cor_test
# Bau = -0.06 * 0.071 x Bev
# Adj - R-squared = 0.922
baulm_cor_test <- cor.test(Bauvolumen$Bau,Bauvolumen$Bev)
abline(baulm)
# Draw regression line into scatter plot
abline(baulm, col= "red")
predict(baulm,c(2.5,3.0))
# Do prediction
pred.bev <- c(2.5, 3.0)
pred.df <- data.frame(Bev=pred.bev)
predict(baulm,pred.df)
pred.df
Bauvolumen
summary(baulm)
predict(baulm,pred.df)
pred.df
Bauvolumen %>% head()
load(dplyr)
libarary(dplyr)
help(dplyr)
Bauvolumen %>% head()
magrittr
library("magrittr", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library(magrittr)
Bauvolumen %>% head()
pred.bev
pred.df
str(Bauvolumen)
str(pred.df)
predict(baulm,pred.df)
summary(baulm)
predict(baulm,newdata=pred.df)
predict(baulm,newdata=pred.df,interval="prediction")
# predict(baulm,newdata=pred.df,interval="prediction")
predict(baulm,newdata=pred.df)
attach(mtcars)
plot(Bauvolumen$Bev,Bauvolumen$Bau)
baulm <- lm(Bauvolumen$Bau ~ Bauvolumen$Bev, Bauvolumen)
summary(baulm)
baulm_cor_test <- cor.test(Bauvolumen$Bau,Bauvolumen$Bev)
baulm_cor_test
# Draw regression line into scatter plot
abline(baulm, col= "red")
# Do prediction
pred.bev <- c(2.5, 3.0)
pred.df <- data.frame(Bev=pred.bev)
# predict(baulm,newdata=pred.df,interval="prediction")
predict(baulm,newdata=pred.df)
mod <- lm(Lohn ~ Alter + Verh + Kinder, data=dat)
set.seed(999)
n <- 10
Alter <- round(20+30*runif(n),1)
Verh <- round(Alter/10+4*runif(n),1)
Kinder <- round(Verh/(1+2*runif(n)),0)
Lohn <- round((2+runif(n))*Alter + (5*runif(n))*Verh
+ (10+5*runif(n))*Kinder + 10+20*runif(n),2)
dat <- data.frame(Lohn,Alter,Verh,Kinder)
cor(dat) # gibt die paarweisen Korrelationen
mod <- lm(Lohn ~ Alter + Verh + Kinder, data=dat)
summary(mod)
mod2 <- lm(scale(Lohn) ~ scale(Alter) + scale(Verh) + scale(Kinder), data=dat)
summary(mod2)
summary(dat)
new.Alter<- c(28,35,40)
new.Verh<-c(2,4,5)
new.Kinder<-c(1,2,1)
new.data<- data.frame(Alter=new.Alter,Verh=new.Verh,Kinder=new.Kinder)
predict(mod,new.data)
View(new.data)
View(pred.df)
View(Bauvolumen)
View(baulm)
summary(baulm)
summary(mod)
baulm <- lm(Bau ~ Bev, Bauvolumen)
summary(baulm)
baulm_cor_test <- cor.test(Bauvolumen$Bau,Bauvolumen$Bev)
baulm_cor_test
# Draw regression line into scatter plot
abline(baulm, col= "red")
# Do prediction
pred.bev <- c(2.5, 3.0)
pred.df <- data.frame(Bev=pred.bev)
# predict(baulm,newdata=pred.df,interval="prediction")
predict(baulm,newdata=pred.df)
set.seed(7777)
alter <- 20 + 30 * runif(n)
alter
alter <- (20 + 30 * runif(n))
alter
alter <- c(20 + 30 * runif(n))
alter
n <- 100
alter <- (20 + 30 * runif(n))
alter
set.seed(7777)
n <- 100
alter <- (20 + 30 * runif(n))
alter
alter <- round((20 + 30 * runif(n)),1)
alter
lohn <- (2 * Alter + 40 * runif(n))
lohn
lohn <- round((2 * Alter + 40 * runif(n)),1)
lohn
plot(alter,lohn)
set.seed(7777)
n <- 100
alter <- round((20 + 30 * runif(n)),1)
alter
lohn <- round((2 * Alter + 40 * runif(n)),1)
lohn
plot (alter,lohn)
cor(alter, lohn)
#
# Aufgabe 1
#
#
Bau<- read.table("Bauvolumen.dat",header=T)
Bau <- Bauvolumen
summary(Bau)
plot(Bau$Bev,Bau$Bau)
cor(Bau$Bev,Bau$Bau)
baulm_cor_test
cor.test(Bau$Bev,Bau$Bau)
Reg.Bau<- lm(Bau~Bev,data=Bau)
summary(Reg.Bau)
abline(Reg.Bau,col="red")
new<- c(2.5,3)
predict(Reg.Bau,data.frame(Bev=new))
load(MASS)
library(MASS)
cats
cats <- cats
summary(cats)
help(cats)
str(cats)
plot(cats$Bwt,cats$Hwt)
cats.lm <- lm(Hwt ~ Bwt, cats)
summary(cats.lm)
abline(cats.lm, col="red")
summary(cats)
cats.lm.sex <- lm(Hwt ~ Bwt + Sex, cats)
summary(cats.lm.sex)
head(cats)
summary(cats.lm.sex)
#
#######################
# Aufgabe 3
#######################
library("MASS")
data("cats")
help("data")
summary(cats)
attach(cats)
plot(Bwt, Hwt, col=as.integer(cats$Sex,data=cats,pch=19))
legend(2,20,legend=levels(cats$Sex),col=1:2,pch=19)
cats.Reg<- lm(Hwt ~Bwt)
summary(cats.Reg)
abline(cats.Reg,col="blue")
cats.F <- subset(cats,Sex=="F")
cats.M <- subset(cats,Sex=="M")
cats.Reg.F<- lm(Hwt ~Bwt,data=cats.F)
summary(cats.Reg.F)
cats.Reg.M<- lm(Hwt ~Bwt,data=cats.M)
summary(cats.Reg.M)
str(cats)
cats.Reg.Dummy<- lm(Hwt ~Bwt+Sex)
summary(cats.Reg.Dummy)
cats.Reg.Inter1<- lm(Hwt ~Bwt+Bwt:Sex)
summary(cats.Reg.Inter1)
cats.Reg.Inter2<- lm(Hwt ~Bwt+Sex+Bwt:Sex)
summary(cats.Reg.Inter2)
